#include <iostream>
using namespace std;

// Function to count the number of zeroes
int countZeroes(int arr[], int n) {
    int low = 0, high = n - 1;

    // Perform binary search to find the first occurrence of 0
    while (low <= high) {
        int mid = low + (high - low) / 2;

        // Check if the middle element is 0 and the one before is 1
        if (arr[mid] == 0 && (mid == 0 || arr[mid - 1] == 1)) {
            return n - mid; // Number of zeroes
        }

        // If mid element is 1, search in the right half
        if (arr[mid] == 1) {
            low = mid + 1;
        } else { // If mid element is 0, search in the left half
            high = mid - 1;
        }
    }

    return 0; // If no zeroes are found
}

int main() {
    int arr1[] = {1, 1, 1, 1, 0, 0};
    int n1 = sizeof(arr1) / sizeof(arr1[0]);
    cout << "Number of zeroes: " << countZeroes(arr1, n1) << endl;

    int arr2[] = {1, 0, 0, 0, 0};
    int n2 = sizeof(arr2) / sizeof(arr2[0]);
    cout << "Number of zeroes: " << countZeroes(arr2, n2) << endl;

    return 0;
}

